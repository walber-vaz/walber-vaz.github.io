# Workflow para deploy de conteúdo estático com minificação
name: Deploy static content to Pages

on:
  # Executa quando há push na branch principal
  push:
    branches: ["main"]

  # Permite executar manualmente via aba Actions
  workflow_dispatch:

# Define permissões do token GitHub
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deploy simultâneo
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install -g html-minifier-terser
          npm install -g clean-css-cli
          npm install -g terser
          npm install -g concat-cli

      - name: Combine and Minify CSS files
        run: |
          # Cria um array com a ordem correta dos arquivos CSS
          CSS_FILES=(
            "./assets/css/global.css"
            "./assets/css/header.css"
            "./assets/css/introduction.css"
            "./assets/css/experience.css"
            "./assets/css/formation.css"
            "./assets/css/footer.css"
          )

          # Verifica se todos os arquivos existem
          for file in "${CSS_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Arquivo $file não encontrado."
              exit 1
            fi
          done

          # Concatena os arquivos CSS na ordem especificada
          concat-cli -f "${CSS_FILES[@]}" -o ./assets/css/styles.combined.css

          # Minifica o arquivo combinado
          cleancss -o ./assets/css/styles.min.css ./assets/css/styles.combined.css

          # Remove o arquivo intermediário
          rm ./assets/css/styles.combined.css

          echo "CSS files combinados e minificados com sucesso!"

      - name: Minify HTML files
        run: |
          find . -type f -name "*.html" -exec echo "Minifying {}" \; -exec html-minifier-terser \
            --collapse-whitespace \
            --remove-comments \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-tag-whitespace \
            --use-short-doctype \
            --minify-css true \
            --minify-js true \
            -o {} {} \;

      # - name: Minify JavaScript files
      #   run: |
      #     find ./assets/js -type f -name "*.js" ! -name "*.min.js" -exec echo "Minifying {}" \; -exec sh -c 'terser "$1" -c -m -o "${1%.js}.min.js"' sh {} \;

      - name: Update HTML references
        run: |
          # Atualiza as referências CSS no HTML para apontar para o arquivo único minificado
          # Exclui os arquivos na pasta trabalho-ads-js-html-js
          find . -type f -name "*.html" -not -path "./trabalho-ads-js-html-js/*" -exec sed -i 's/styles\.css/styles\.min\.css/g' {} \;
          # Atualiza as referências JS
          # Exclui os arquivos na pasta trabalho-ads-js-html-js
          find . -type f -name "*.html" -not -path "./trabalho-ads-js-html-js/*" -exec sed -i 's/\.js"/\.min\.js"/g' {} \;

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Faz upload de todo o repositório
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
